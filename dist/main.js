/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
eval("const celsiusBtn = document.querySelector(\".celsius\");\r\nconst fahrBtn = document.querySelector(\".fahr\");\r\nconst loading = document.querySelector(\".loading\");\r\nconst weatherCard = document.querySelector(\".weather-card\");\r\nconst temp = document.querySelector(\".temp\");\r\nconst feelsLike = document.querySelector(\".feels-like\");\r\nlet weatherData;\r\n\r\nfunction searchListener() {\r\n\tdocument\r\n\t\t.querySelector(\".search-btn\")\r\n\t\t.addEventListener(\"click\", getCityWeather);\r\n}\r\n\r\nfunction conversionBtns() {\r\n\tcelsiusBtn.addEventListener(\"click\", toCelsius);\r\n\tfahrBtn.addEventListener(\"click\", toFahrenheit);\r\n}\r\n\r\nfunction getCityWeather() {\r\n\tconst searchText = document.querySelector(\".search-text\").value;\r\n\tif (searchText !== \"\") {\r\n\t\tgetWeather(searchText);\r\n\t}\r\n}\r\n\r\nasync function getWeather(city) {\r\n\ttry {\r\n\t\tloading.style.display = \"block\";\r\n\t\tweatherCard.style.display = \"none\";\r\n\t\tconst response = await fetch(\r\n\t\t\t`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=acbf276018dff8bc22038492e6e32b85`,\r\n\t\t\t{ mode: \"cors\" }\r\n\t\t);\r\n\t\tconst data = await response.json();\r\n\t\tweatherData = getData(data);\r\n    appendWeatherData(weatherData);\r\n    localStorage.setItem(\"lastSearchedCity\", city);\r\n    document.querySelector(\"#searchError\").textContent = '';\r\n\t} catch (err) {\r\n    document.querySelector('#searchError').textContent = 'Location not found!';\r\n    loading.style.display = \"none\";\r\n\t\tweatherCard.style.display = \"block\";\r\n\t}\r\n}\r\n\r\nfunction appendWeatherData(data) {\r\n\tconst country = document.querySelector(\".country\");\r\n\tconst humidity = document.querySelector(\".humidity\");\r\n\tconst pressure = document.querySelector(\".pressure\");\r\n\tconst desc = document.querySelector(\".desc\");\r\n\tconst icon = document.querySelector(\".weather-icon\");\r\n\r\n\tcountry.textContent = `${data.city}, ${data.country}`;\r\n\tinitialTempUnit();\r\n\thumidity.textContent = `${data.humidity}%`;\r\n\tpressure.textContent = `${data.pressure}hPa`;\r\n\tdesc.textContent = `${data.description}`;\r\n\ticon.src = `http://openweathermap.org/img/wn/${data.icon}@2x.png`;\r\n\tloading.style.display = \"none\";\r\n\tweatherCard.style.display = \"block\";\r\n}\r\n\r\nfunction getData(data) {\r\n\tconst weatherData = {\r\n\t\ttempInCelsius: data.main.temp,\r\n\t\tfeelsLike: data.main.feels_like,\r\n\t\thumidity: data.main.humidity,\r\n\t\tpressure: data.main.pressure,\r\n\t\tdescription: data.weather[0].description,\r\n\t\ticon: data.weather[0].icon,\r\n\t\tcountry: data.sys.country,\r\n\t\tcity: data.name,\r\n\t};\r\n\r\n\treturn weatherData;\r\n}\r\n\r\nfunction initialTempUnit() {\r\n\tif (\r\n\t\t!(\"tempUnit\" in localStorage) ||\r\n\t\tlocalStorage.getItem(\"tempUnit\") === \"celsius\"\r\n\t) {\r\n\t\ttoCelsius();\r\n\t} else {\r\n\t\ttoFahrenheit();\r\n\t}\r\n}\r\n\r\nfunction toCelsius() {\r\n\tlocalStorage.setItem(\"tempUnit\", \"celsius\");\r\n\tdocument.querySelector(\".celsius\").classList.add(\"btn-active\");\r\n\tdocument.querySelector(\".fahr\").classList.remove(\"btn-active\");\r\n\ttemp.textContent = `${weatherData.tempInCelsius}\\u00B0`;\r\n\tfeelsLike.textContent = `${weatherData.feelsLike}\\u00B0`;\r\n}\r\n\r\nfunction toFahrenheit() {\r\n\tconst tempFahr = tempToFahrenheit(weatherData.tempInCelsius);\r\n\tconst feelsLikeFahr = tempToFahrenheit(weatherData.feelsLike);\r\n\tlocalStorage.setItem(\"tempUnit\", \"fahr\");\r\n\tdocument.querySelector(\".celsius\").classList.remove(\"btn-active\");\r\n\tdocument.querySelector(\".fahr\").classList.add(\"btn-active\");\r\n\ttemp.textContent = `${tempFahr}\\u00B0`;\r\n\tfeelsLike.textContent = `${feelsLikeFahr}\\u00B0`;\r\n}\r\n\r\nfunction tempToFahrenheit(temp) {\r\n\treturn Math.round((temp * 9) / 5 + 32);\r\n}\r\n\r\nwindow.onload = function init() {\r\n\tsearchListener();\r\n\tif (!(\"lastSearchedCity\" in localStorage)) {\r\n\t\tgetWeather(\"Lagos\");\r\n\t} else {\r\n\t\tconst city = localStorage.getItem(\"lastSearchedCity\");\r\n\t\tgetWeather(city);\r\n\t}\r\n\tconversionBtns();\r\n};\r\n\n\n//# sourceURL=webpack://weather-app/./src/index.js?");
/******/ })()
;